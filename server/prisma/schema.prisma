// Connect to MongoDB datasource
datasource db {
  provider = "mongodb"
  url      = env("MONGODB_URI")
}

generator client {
  provider = "prisma-client-js"
}

// Define User model
model User {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
  Cart      Cart[]
  Order     Order[]
}

// Define Dish model
model Dish {
  id          String      @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  price       Int
  cuisine     String
  type        String
  subCategory String
  description String?
  image       String?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @default(now())
  CartDish    CartDish[]
  OrderItem   OrderItem[]
}

// Define Cart model
model Cart {
  id        String     @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
  userId    String     @unique @db.ObjectId
  items     CartDish[]
  user      User       @relation(fields: [userId], references: [id])
}

// Define embedded type for Cart items
model CartDish {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  dishId   String  @db.ObjectId
  quantity Int
  Cart     Cart?   @relation(fields: [cartId], references: [id])
  cartId   String? @db.ObjectId
  dish     Dish?   @relation(fields: [dishId], references: [id])
}

// Define Order model
model Order {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  userId     String      @db.ObjectId
  items      OrderItem[]
  totalPrice Int
  status     String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @default(now())

  // Relation with User model
  user User @relation(fields: [userId], references: [id])
}

// Embedded type for Order items
model OrderItem {
  id       String  @id @default(auto()) @map("_id") @db.ObjectId
  dishId   String  @db.ObjectId
  quantity Int
  price    Int
  Order    Order?  @relation(fields: [orderId], references: [id])
  orderId  String? @db.ObjectId
  dish     Dish?   @relation(fields: [dishId], references: [id])
}
